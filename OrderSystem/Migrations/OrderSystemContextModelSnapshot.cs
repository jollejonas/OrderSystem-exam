// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderSystem.Data;

#nullable disable

namespace OrderSystem.Migrations
{
    [DbContext(typeof(OrderSystemContext))]
    partial class OrderSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderSystem.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ManufacturingYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("OrderSystem.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EndedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastEdit")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastEditBy")
                        .HasColumnType("int");

                    b.Property<int?>("Machine")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StartedBy")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("EndedBy");

                    b.HasIndex("LastEditBy");

                    b.HasIndex("Machine");

                    b.HasIndex("StartedBy");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("UserType").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("OrderSystem.Models.Admin", b =>
                {
                    b.HasBaseType("OrderSystem.Models.User");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("OrderSystem.Models.Customer", b =>
                {
                    b.HasBaseType("OrderSystem.Models.User");

                    b.HasDiscriminator().HasValue("Customer");
                });

            modelBuilder.Entity("OrderSystem.Models.Operator", b =>
                {
                    b.HasBaseType("OrderSystem.Models.User");

                    b.HasDiscriminator().HasValue("Operator");
                });

            modelBuilder.Entity("OrderSystem.Models.Planner", b =>
                {
                    b.HasBaseType("OrderSystem.Models.User");

                    b.HasDiscriminator().HasValue("Planner");
                });

            modelBuilder.Entity("OrderSystem.Models.Order", b =>
                {
                    b.HasOne("OrderSystem.Models.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OrderSystem.Models.User", "EndedByUser")
                        .WithMany()
                        .HasForeignKey("EndedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OrderSystem.Models.User", "LastEditByUser")
                        .WithMany()
                        .HasForeignKey("LastEditBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OrderSystem.Models.Machine", "MachineObject")
                        .WithMany()
                        .HasForeignKey("Machine")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OrderSystem.Models.User", "StartedByUser")
                        .WithMany()
                        .HasForeignKey("StartedBy");

                    b.Navigation("CreatedByUser");

                    b.Navigation("EndedByUser");

                    b.Navigation("LastEditByUser");

                    b.Navigation("MachineObject");

                    b.Navigation("StartedByUser");
                });
#pragma warning restore 612, 618
        }
    }
}
